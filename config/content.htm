<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>weeks</h1>
<h2>Week2~Week5</h2>
<p>week2</p>
<p>建立個人倉儲cad2019及編輯</p>
<p>1.下載<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a><span> (編譯  Solvespace 用)，完成後並開啟<br/>2.登入自己的github帳號後，創建新的倉儲cad2019。<br/></span><span>3.進入要存放資料夾tmp。<br/></span><span>4.輸入</span><span>git clone  <span>https://github.com/s40723239/cad2019複製<span>個人倉儲至資料夾</span><span>。</span></span><span><br/>5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。<br/>6.進入cmsimde，輸入python -m pip install flask_cors 更改模組。<br/>7.完成後，python wsgi.py 開始編輯倉儲(login密碼為admin)。<br/>8.編輯完成後，git status<span><span> </span>&gt;</span><span> </span>git add .<span><span> </span>&gt;</span><span> </span>git commit -m "...."<span><span> </span>&gt;</span><span> </span>git push。</span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/U8CUILw_H_Q" width="560"></iframe></p>
<p><span><span>week3</span></span></p>
<p><strong>進行Solvespace 編譯</strong></p>
<p>1.<span>將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</span></p>
<p>2.<span>查驗 git 版本是否在"2.13以上"</span></p>
<p><span>3.git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace(務必在網路穩定地方下進行下載)</span></p>
<p><span>4.編輯Y:\tmp\solvespace\extlib\angle\CMakeLists.txt 開啟後將第713行及714行前方加上"#"</span></p>
<p><span>5.將 libpng.dll.a 的編譯，改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中</span></p>
<p><span>6. cd solvespace &gt;cd extlib &gt;cd libpng &gt;mkdir build &gt; cd build </span></p>
<p><span>7.輸入cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span></p>
<p><span>8.輸入mingw32-make &gt; 退到solvespace &gt; mkdir build &gt; cd build</span></p>
<p><span>9.在執行一次cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span></p>
<p><span>10.在輸入mingw32-make &gt; Done</span></p>
<p><span><span>        <iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qaVN7s19UUg" width="560"></iframe></span></span></p>
<p><span>week5</span></p>
<p><span>使用solvespace 練習繪製圖案</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hlipc0IuE-A" width="560"></iframe></span></p>
<p><br/><br/><br/></p>
<h2>Week6~Week9</h2>
<p>week6</p>
<p><span>利用Solvespace畫出車子</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vvHHd2R90cM" width="560"></iframe></p>
<p><span>V-rep 模型控制</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eXCRexQXSlg" width="560"></iframe></p>
<p><span></span>week7</p>
<p>更改<span>solvespace中about的內容</span><strong></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-LvNGgdgEOg" width="560"></iframe></strong></p>
<p><span><img alt="" height="551" src="/images/solvespace_fZbOQyU8f6.png" width="1074"/></span></p>
<p><span>solvespace零件圖</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2vAPgU7QPSI" width="560"></iframe></span></p>
<p>week8 </p>
<p>啟用cmsimde裡的網誌系統</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7SJMhKjCvbg" width="560"></iframe></p>
<p><span>導入webots</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PXkapeYze0Y" width="560"></iframe></span></p>
<p><span></span></p>
<h2>Week10~Week14</h2>
<p>week10</p>
<p><span>1.由組長創建</span><span>分組網站 </span></p>
<p>2.由組員透過fork加入創建之分組網站</p>
<p>3.加入後用git  clone submodules 組別倉儲網址 </p>
<p>4.以git pull request的方式進行推送(必須由組長認證推送內容才可以成功推送)</p>
<p>5.閱讀nx12及nx3的操作手冊和教程</p>
<p>week12</p>
<p>將組長分配的翻譯作業做完</p>
<p>我被分配到NX 12 for Engineering Design 的第八章</p>
<p><span style="color: #ff0000;">第八章 有限元分析</span></p>
<p>有限元分析（FEA）是有限元法（FEM）的預測結構或流體的響應特性所施加的因素，例如力，壓力，熱，和振動的實際應用。</p>
<p>可以幫助工程師們有一個更好的了解產品的性能在製造和測試之前。</p>
<p><span style="color: #ff0000;">8.1概述</span></p>
<p><span style="color: #ff0000;">8.1.1元件形狀和節點</span><br/> 的元素可以被分類為基於維度數目和節點中的元素的數量不同的類型。以下是一些類型的用於離散元件組成。</p>
<p><span style="color: #ff0000;">8.1.2 Solution Steps</span></p>
<p>啟動模擬&gt;選擇材料特性&gt;運用負載&gt;運用邊界條件&gt;嚙合機構&gt;解決方案和結果</p>
<p><span style="color: #ff0000;">8.1.3 Simulation Navigator</span></p>
<p><span>仿真Navigator提供的能力，激活現有的解決方案，創建新的，並通過創建和修改運動的物體使用創建的解決方案來構建機制。要顯示模擬導航</span><br/><span>➢在資源欄中單擊仿真Navigator選項卡如該圖所示</span><br/><span>它顯示了模型創建仿真的列表。在每個模擬中，它顯示載荷，邊界條件，多種網孔的列表，結果，產生的等報告。</span></p>
<p><span style="color: #ff0000;">8.2模擬CREATION</span></p>
<p>➢將文件複製並粘貼Impeller_impeller.prt到一個新的文件夾，以避免被改變向大會提出，如果該部分尚未在NX窗口中打開➢點擊新建→模擬<br/> ➢打開此新複製的文件</p>
<p>如果部分在NX已經打開，然後從頂部功能區欄，點擊應用程序→設計<br/> 或者➢點擊文件→所有應用程序→模擬→設計仿真<br/> 當你第一次打開設計仿真模塊的任何文件，它會自動彈出新的有限元與仿真對話框創建一個模擬。在彈出的對話框中，單擊確定以創建新的模擬。<br/> 那麼在接下來的彈出窗口的解決方案，您可以選擇解算器和分析類型。<br/> 默認的求解器類型的NX Nastran設計和分析類型結構。<br/> ➢選擇確定以創建一個新的解決方案稱為方案一，將被顯示在模擬導航。在這裡，我們保持其他項目為默認值。</p>
<p>現在，模擬導航將類似於下圖</p>
<p><span style="color: #ff0000;">8.3材料性能</span><br/> 下一個步驟是將材料特性分配給該模擬的實體模型。因為我們沒有在庫中的任何數據檢索標準的材料，我們將創建一個。讓我們假設，我們將用鋼管來製造葉輪。</p>
<p>照著它的指示步驟一路做下去</p>
<p><span style="color: #ff0000;">8.4網格劃分</span><br/> 網格選項離散化的模型成小的元件</p>
<p><span style="color: #ff0000;">8.5荷載</span><br/> 施加在實體模型上的負載應是輸入到系統中。用於葉輪，假設主要力作用於渦輪機葉片的凹表面上。這種加載可以通過所有五個表面上正常的壓力近似。由於我們不關心負荷的大小，讓我們的價值為100磅/平方英寸英寸誇大葉片的變形。</p>
<p><span style="color: #ff0000;">8.6邊界條件</span><br/> 葉輪繞圓錐體的軸與軸的軸旋轉，如您在前幾章的裝配中所看到的那樣。它不是固定的，但我們關心的是葉片相對於葉輪芯的變形。錐形芯相對固定，葉片的變形要進行相應的分析。</p>
<p><span style="color: #ff0000;">8.7結果與模擬</span><br/> 8.7.1解決了模擬<br/> 的有限元模型，現在可以解決和分析。這是一個很好的做法，為模型完成第一次檢查之前，我們進入模型求解。要檢查模型</p>
<p><span style="color: #ff0000;">8.7.2 FEA結果</span></p>
<p>可以輕鬆地解釋從顏色編碼的結果。橘紅色顯示的最大變形區和藍色區域顯示的最小變形區。可以觀察到，由於錐形核心是固定的，它經歷零變形。</p>
<p>8.7.3仿真和動畫<br/> 點擊頂部帶狀條結果選項卡上。一種用於動畫組上可以看到其如下</p>
<p>可以看到負載應用到葉片葉輪變形的動畫。</p>
<p><span style="color: #ff0000;">8.8練習</span></p>
<p><span style="color: #ff0000;">8.8.1手扳壓機欄</span><br/> 打開文件“Arborpress_L-bar.prt'，做一個類似的結構分析，考慮材料如鋼。用於網格的元件的尺寸和類型應為'10'和'四（10）'。對於負載，與應用500的頂表面上的大小的常壓如示於下面的第一個圖。</p>
<p><span style="color: #ff0000;">8.8.2 搖臂</span><br/> 在本練習中，您將檢查元素類型和網格大小對有限元分析結果的影響。打開第 4 章中建模的搖臂。分配以下材料屬性：Young 的模量 = 3.0 × 107 psi，泊森的比率 = 0.29，品質密度 = 7.35 × 10-4 slug/in3。修復計數器孔孔和計數器沉孔（即修復圓柱面），如下圖所示，並施加 600 psi 值的壓力負載，以正常顯示的面。對於以下四種情況中，分別獲取偏轉輪廓和 Von-Mises 應力輪廓。</p>
<p>week13</p>
<p>webots tutorial </p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lZAOZRYMrr4" width="560"></iframe></p>
<p>week10~12 進度報告</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/BCSsnO3t-4I" width="560"></iframe></p>
<p>week14   </p>
<p>tutorial 2 and 3</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0G8syhuB-h0" width="560"></iframe></p>
<p></p>
<p></p><h3>proe的開發緣起</h3>
<p><img alt="" height="121" src="/images/pro-e.jpg" width="409"/></p>
<p>pro-e是Pro/Engineer的簡稱，更常用的簡稱是ProE或Pro/E，Pro/E是美國參數技術公司（Parametric Technology Corporation，簡稱PTC）的重要產品，在目前的三維造型軟件領域中佔有著重要地位。</p>
<p>pro-e作為當今世界機械CAD/CAE/CAM領域的新標準而得到業界的認可和推廣，是現今主流的模具和產品設計三維CAD/CAM軟件之一。</p>
<p><span>Pro/ENGINEER在2010年8月改名為「<b>Creo Elements/Pro</b>」</span></p>
<p><span><span>2011年6月再改名為「</span><b>Creo Parametric</b><span>」</span></span></p><h2>Week15~Week18</h2>
<p>week15  進度回報</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Ax4Wkw_jcnU" width="560"></iframe></p><h1>Note</h1>
<h2>solvespace 常用指令</h2>
<p>shift+W 建立平面</p>
<p>P 點</p>
<p>C 圓</p>
<p>A 曲線</p>
<p>S 線</p>
<p>D 標註</p>
<p>N 角度標註</p>
<p>M 鎖定中心</p>
<p>V 鉛直</p>
<p>H 水平</p>
<p>Q 兩線相同</p>
<p>O 重和</p>
<p>G 建構線</p>
<p></p>
<p><span></span></p>